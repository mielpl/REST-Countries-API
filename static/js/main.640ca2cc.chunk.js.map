{"version":3,"sources":["Countries.js","Header.js","useFetch.js","Country.js","App.js","index.js"],"names":["url","Header","useState","theme","setTheme","document","documentElement","className","localStorage","getItem","body","classList","remove","onClick","setItem","useFetch","loading","setLoading","data","setData","getdata","useCallback","a","fetch","response","json","useEffect","Countries","filtra","input","numberWithCommas","countries","setCountries","filter","country","region","length","map","flag","name","population","capital","to","src","alt","style","left","Country","getCountryName","countryName","useParams","setCountry","nativeName","subregion","topLevelDomain","currencies","symbol","languages","lang","regionalBlocs","bloc","borders","element","App","undefined","inputField","setInputField","search","setSearch","setFilter","number","toString","replace","exact","path","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","id","defaultValue","children","code","alpha3Code","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.640ca2cc.chunk.js","sourcesContent":["import useFetch from \"./useFetch\";\r\nimport {useEffect , useState } from 'react';\r\nimport {  Link } from 'react-router-dom'\r\nlet url;\r\nconst Countries = ({filtra,input,numberWithCommas}) => {\r\n    url = input ? `https://restcountries.com/v2/name/${input}` : \"https://restcountries.com/v2/all\"\r\n    \r\n    const {data,loading} = useFetch(url);\r\n    const [countries,setCountries] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        if(input){\r\n           setCountries(data)\r\n        }\r\n\r\n        else{\r\n            if(filtra === \"All\") setCountries(data)\r\n            \r\n            else{\r\n\r\n                setCountries(data.filter((country)=>{\r\n                    return country.region === filtra;\r\n                }))\r\n\r\n            }\r\n\r\n        }\r\n\r\n    },[input,data,filtra])\r\n\r\n    return ( \r\n        <div className=\"countriesList\">\r\n            <div className=\"container\">\r\n                {loading && <h1 className=\"loading\">Loading ...</h1>}\r\n                {countries.length ? countries.map(country => {\r\n                        const {flag,name,population,region,capital} = country;\r\n                        return(\r\n                            <Link to={`/${name}`} className=\"listItem\" key={name}>\r\n                                <img src={flag} alt={name}/>\r\n                                <div className=\"info\">\r\n                                    <h2>{name}</h2>\r\n                                    <div><h3>population:</h3><span>{numberWithCommas(population)}</span></div>\r\n                                    {region && <div><h3>region:</h3><span>{region}</span></div>}\r\n                                    {capital && <div><h3>capital:</h3><span>{capital}</span></div>}\r\n                                </div>\r\n                            </Link>\r\n                        )\r\n                    })\r\n                  : <h1 className={loading ? \"x\" : \"loading\"} style={{left:\"35%\"}}>There is no result for your search</h1>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Countries;","import { useState } from \"react\";\r\nconst Header = () => {   \r\n    const [theme,setTheme] = useState('light');\r\n    document.documentElement.className = localStorage.getItem(\"themeStorage\") ? localStorage.getItem(\"themeStorage\"):theme;\r\n    document.body.classList.remove(\"light\")\r\n    const handleSwitcher = () => {\r\n        if(theme===\"light\"){\r\n         setTheme(\"dark\")\r\n         document.documentElement.className = theme     \r\n        }else{\r\n         setTheme(\"light\")\r\n         document.documentElement.className = theme\r\n        }\r\n        localStorage.setItem(\"themeStorage\",theme);\r\n    }\r\n    return ( \r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <h1>Where in the world?</h1>\r\n                <span onClick={handleSwitcher}><i className=\"fas fa-moon\"></i>dark mode</span>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Header;","import {useState,useEffect,useCallback} from 'react'\r\n\r\nconst useFetch = (url) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n\r\n  const getdata = useCallback(async () => {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    setData(data);\r\n    setLoading(false);\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    getdata();\r\n  }, [url, getdata]);\r\n  return { loading, data };\r\n}\r\n \r\nexport default useFetch;","import { useEffect, useState } from 'react';\r\nimport {  Link, useParams} from 'react-router-dom'\r\nimport useFetch from './useFetch';\r\nconst Country = ({numberWithCommas,getCountryName}) => {\r\n    const countryName = useParams();\r\n    const {data,loading} = useFetch(`https://restcountries.com/v2/name/${countryName.countryName}?fullText=true`);\r\n    const [country,setCountry] = useState(data);\r\n    useEffect(() => {\r\n        setCountry(data);\r\n    },[data])\r\n    return ( \r\n        <div className=\"countryPage\">\r\n            {loading && <h1 className=\"loading\">Loading ...</h1>}\r\n            <div className=\"container\">\r\n                <div className=\"back\">\r\n                    <Link to='/'><i className=\"fas fa-arrow-left\"></i>Back</Link>\r\n                </div>\r\n            </div>\r\n            {country.length === 1 &&      \r\n                <div className=\"country\">\r\n                    <div className=\"container\">\r\n                        <div className=\"flag\">\r\n                            <img src={country[0]?.flag} alt={country[0]?.name} />\r\n                        </div>\r\n                        <div className=\"countryInfo\">\r\n                            <div className=\"name\">\r\n                            <h1>{country[0]?.name}</h1>\r\n                            </div>\r\n                            <div className=\"generalInfo\">\r\n                                <div className=\"geoInfo\">\r\n                                {country[0]?.nativeName && <div><h3>native name:</h3>{country[0]?.nativeName}</div>}\r\n                                    <div><h3>population:</h3>{numberWithCommas(country[0]?.population)}</div>\r\n                                    {country[0]?.region && <div><h3>region:</h3>{country[0]?.region}</div>}\r\n                                    {country[0]?.subregion && <div><h3>sub region:</h3>{country[0]?.subregion}</div>}\r\n                                    {country[0]?.capital && <div><h3>capital:</h3>{country[0]?.capital}</div>}\r\n                                </div>\r\n                                <div className=\"moreInfo\">\r\n                                    <div><h3>top level domain:</h3>{country[0]?.topLevelDomain[0]}</div>\r\n                                    <div><h3>currencies:</h3>{country[0]?.currencies[0]?.name} ({country[0]?.currencies[0]?.symbol})</div>\r\n                                    <div><h3>languages:</h3>{country[0]?.languages.map((lang) =>{\r\n                                                                return <>\r\n                                                                    {lang.name}, \r\n                                                                </>\r\n                                                            })}</div>\r\n                                    {country[0]?.regionalBlocs.length>=1 &&\r\n                                        <div><h3>regional blocs:</h3>{country[0]?.regionalBlocs.map((bloc) =>{\r\n                                                                return <>\r\n                                                                    {bloc.name} ,\r\n                                                                </>\r\n                                                            })}</div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            {country[0]?.borders.length >=1 && <div className=\"borderCountries\">\r\n                                    <h3>border countries:</h3>\r\n                                    {country[0]?.borders.map((element) => { \r\n                                        const countryName = getCountryName(element);                                  \r\n                                        return(\r\n                                            <Link className=\"borders\" to={`/${countryName}`} key={element}>{countryName}</Link>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {!country.length && <h1 className={loading ? \"x\":\"loading\"}>Page not found</h1>}\r\n        </div>\r\n     );\r\n}\r\nexport default Country;\r\n","import React from 'react';\r\nimport Header from './Header'\r\nimport {useState} from 'react';\r\nimport Countries from './Countries';\r\nimport Country from './Country';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport useFetch from './useFetch';\r\n\r\n\r\nfunction App() {\r\n  const [inputField , setInputField ] = useState(undefined);\r\n  const [search,setSearch] = useState(undefined);\r\n  const [filtra,setFilter] = useState(\"All\");\r\n  const {data} = useFetch(\"https://restcountries.com/v2/all\")\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      setSearch(inputField);\r\n  }\r\n  const handleSelect = (e) => {\r\n    setFilter(e.target.value)\r\n    setSearch(undefined);\r\n    setInputField('');\r\n  }\r\n  const getCountryName = (code) => {\r\n    let countryName;\r\n    const country = data.filter((element)=>{\r\n      return element.alpha3Code === code;\r\n    })  \r\n    countryName = country[0].name\r\n    return countryName;\r\n  }\r\n  const numberWithCommas = ( number => {\r\n    return number\r\n            .toString()\r\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g,\",\");\r\n  })\r\n  return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <div className=\"container\">\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"inputField\">\r\n                    \r\n                    <input \r\n                      type=\"search\"\r\n                      placeholder = \"Search for a country...\"\r\n                      value={inputField}\r\n                      onChange={(e)=>{\r\n                        setInputField(e.target.value)\r\n                        setSearch(e.target.value)\r\n                        }\r\n                      }\r\n                    />\r\n                    <i className=\"fas fa-search\"></i>\r\n                  </div>\r\n                  <select id=\"region\" name=\"region\" onChange={handleSelect}>\r\n                    <option value=\"All\" defaultValue>All</option>\r\n                    <option value=\"Africa\">Africa</option>\r\n                    <option value=\"Americas\">America</option>\r\n                    <option value=\"Asia\">Asia</option>\r\n                    <option value=\"Europe\">Europe</option>\r\n                    <option value=\"Oceania\">Oceania</option>\r\n                  </select>\r\n                </form>\r\n              </div>\r\n              <Countries filtra={filtra} input={search} numberWithCommas={numberWithCommas}/>\r\n            </Route> \r\n            <Route path=\"/:countryName\" children={<Country numberWithCommas={numberWithCommas} getCountryName={getCountryName}/>} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n  );\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}